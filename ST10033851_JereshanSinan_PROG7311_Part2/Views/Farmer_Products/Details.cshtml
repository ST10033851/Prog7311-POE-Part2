@model IEnumerable<ST10033851_JereshanSinan_PROG7311_Part2.Models.Product>

@{
    ViewData["Title"] = "Details";
}

<h1 class="Heading">All Products</h1>

<div class="header">
    <label class="control-label">Filter by: </label>
    <select id="ProductCategoryFilter" class="form-control graph-option">
        <option value="">Select Category</option>
        @{
            List<Product> products = ViewBag.Products as List<Product>;
            HashSet<string> uniqueCategories = new HashSet<string>();

            if (products != null)
            {
                foreach (var product in products)
                {
                    if (uniqueCategories.Add(product.Category))
                    {
                        <option value="@product.Category">@product.Category</option>
                    }
                }
            }
        }
    </select>
    <label class="control-label">Start Date: </label>
    <input type="date" id="StartDateFilter" class="form-control datepicker graph-option">
    <label class="control-label">End Date: </label>
    <input type="date" id="EndDateFilter" class="form-control datepicker graph-option">
    <button id="DateRangeFilterButton" class="btn btn-primary filter-button">Filter by date</button>
</div>

<div class="module-grid">
    @foreach (var item in Model.OrderByDescending(value => value.ProductName))
    {
        <div class="module-item" data-product-category="@item.Category" data-production-date="@item.ProductionDate">
            <img src="/Images/vegetables.png" alt="Product Image">
            <h3>@Html.DisplayFor(modelItem => item.ProductName)</h3>
            <p>Category: @Html.DisplayFor(modelItem => item.Category)</p>
            <p>Production Date: @Html.DisplayFor(modelItem => item.ProductionDate.Date)</p>
            <p>Stock Available: @Html.DisplayFor(modelItem => item.StockAvailable)</p>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    $(document).ready(function () {
        $('#ProductCategoryFilter').change(function () {
            var selectedCategory = $(this).val();

            if (selectedCategory) {
                // Hide all rows and show only those matching the selected module code
                $('.module-item').hide();
                $('.module-item').filter('[data-product-category="' + selectedCategory + '"]').show();
            } else {
                // If no module code is selected, show all rows
                $('.module-item').show();
            }
        });

        $('#DateRangeFilterButton').click(function () {
            var startDate = $('#StartDateFilter').val();
            var endDate = $('#EndDateFilter').val();

            if (startDate && endDate) {
                filterByDateRange(startDate, endDate);
            } else {
                // Handle error or show all items if both dates are not selected
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please enter both start and end date to filter',
                });
            }
        });

        function filterByDateRange(startDate, endDate) {
            // Convert date strings to Date objects for comparison
            var startDateTime = new Date(startDate);
            var endDateTime = new Date(endDate);

            // Hide all rows and show only those within the selected date range
            $('.module-item').hide().each(function () {
                var productionDate = new Date($(this).data('production-date'));

                if (productionDate >= startDateTime && productionDate <= endDateTime) {
                    $(this).show();
                }
            });
        }
    });
</script>